version: '3'

vars:
  SERVICE_NAME: 'ros'
  UID:
    sh: id --user
  GID:
    sh: id --group
  UID_GID: '{{.UID}}:{{.GID}}'
  RUN_CMD: 'docker compose run --user "{{.UID_GID}}"'
  BUILD_CMD: '{{.RUN_CMD}} --rm {{.SERVICE_NAME}} colcon build --packages-select'

tasks:
  setup:
    summary: |
      Steps for initializing the directory for development

      This task
        - Builds the docker image used for compiling and running ROS modules
        - Pulls the git submodules necessary for type-hints
        - Installs python dependencies using Pipenv
    cmds:
      - 'docker compose build {{.SERVICE_NAME}}'
      - 'git submodule update --init --recursive'
      - 'pipenv install'
    env:
      PIPENV_VENV_IN_PROJECT: 1

  build-detector:
    cmds:
      - '{{.BUILD_CMD}} detector'
    sources:
      - src/detector/setup.*
      - src/detector/package.xml
      - src/detector/detector/*.py
    generates:
      - build/detector/build/lib/detector/*.py

  build-predictor:
    cmds:
      - '{{.BUILD_CMD}} predictor'
    sources:
      - src/predictor/setup.*
      - src/predictor/package.xml
      - src/predictor/predictor/*.py
    generates:
      - build/predictor/build/lib/predictor/*.py

  build-converter:
    cmds:
      - '{{.BUILD_CMD}} converter'
    sources:
      - src/converter/setup.*
      - src/converter/package.xml
      - src/converter/converter/*.py
    generates:
      - build/converter/build/lib/converter/*.py

  build:
    summary: 'Build all the ROS modules of this project'
    deps:
      - build-detector
      - build-predictor
      - build-converter

  convert:
    summary: 'Convert a given video into a rosbag'
    deps:
      - build-converter
    cmds:
      - docker compose up --detach {{.SERVICE_NAME}}
      - defer: 'docker compose down'
      - docker compose exec --detach {{.SERVICE_NAME}} scripts/record {{.FILE}} images
      - docker compose exec {{.SERVICE_NAME}} scripts/play {{.FILE}}
      - docker compose exec {{.SERVICE_NAME}} chown -R {{.UID_GID}} recordings
    vars:
      FILE: 'recordings/baseline.mp4'

  clean-image:
    cmds:
      - docker compose down --rmi all --remove-orphans

  clean-build:
    cmds:
      - rm -rf ./build ./install ./log

  clean-all:
    deps:
      - clean-image
      - clean-build
